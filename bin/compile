#!/usr/bin/env bash

set -e

ENV_DIR="$3"

export_env_dir() {
  local env_dir=${1:-$ENV_DIR}
  local whitelist_regex=${2:-''}
  local blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|BUILDPACK_URL)$'}

  if [ -d "$env_dir" ]; then
    echo "-----> Exporting config vars"
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
        echo "       $e" &&
        export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir

mkdir -p "$1/bin/"
cp "bin/nginx-$STACK" "$1/bin/nginx"
nginx_version=$(./bin/nginx-$STACK -V 2>&1 | head -1 | awk '{ print $NF }')
echo "-----> nginx-buildpack: Installed ${nginx_version} to app/bin"
cp bin/start-nginx "$1/bin/"
echo '-----> nginx-buildpack: Added start-nginx to app/bin'
cp bin/start-nginx-solo "$1/bin/"
echo '-----> nginx-buildpack: Added start-nginx-solo to app/bin'

mkdir -p "$1/config"

if [[ ! -f $1/config/mime.types ]]; then
  cp config/mime.types "$1/config/"
  echo '-----> nginx-buildpack: Default mime.types copied to app/config/'
else
  echo '-----> nginx-buildpack: Custom mime.types found in app/config.'
fi

if [[ ! -f $1/config/nginx.conf.erb ]]; then
  cp config/nginx.conf.erb "$1/config/"
  echo '-----> nginx-buildpack: Default config copied to app/config.'
else
  echo '-----> nginx-buildpack: Custom config found in app/config.'
fi

echo "-----> Processing the API docs"
mkdir -p "$1/doc"
for FILE in `ls doc/*.erb`; do
  echo "       $FILE > $1/${FILE%.erb}"
  erb $FILE > $1/${FILE%.erb}
done

# echo "-----> Copying the config file builder"
# cp scripts/env-to-config "$1/."
# chmod +x $1/env-to-config

exit 0
